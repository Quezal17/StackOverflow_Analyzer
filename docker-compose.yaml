version: "3.7"

services:
  zookeeper:
    image: zookeeper
    container_name: "stackoflw-zookeeper"
    ports:
      - 2181:2181
    networks:
      stackoflw:
        ipv4_address: "10.0.100.22"
  kafka:
    build: Kafka/
    container_name: "stackoflw-kafka"
    depends_on:
      - "zookeeper"
    networks:
      stackoflw:
        ipv4_address: "10.0.100.25"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: "stackoflw-elasticsearch"
    ports:
      - 9200:9200
    environment:
      - node.name=esStackoflw
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=esStackoflw
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    networks:
      stackoflw:
        ipv4_address: "10.0.100.51"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.0
    container_name: "stackoflw-kibana"
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://10.0.100.51:9200
      ELASTICSEARCH_HOSTS: http://10.0.100.51:9200
      MONITORING_ENABLED: "false"
    networks:
      stackoflw:
        ipv4_address: "10.0.100.52"
  spark:
    build: Spark/
    container_name: "stackoflw-spark"
    depends_on:
      - "kafka"
    networks:
      stackoflw:
        ipv4_address: "10.0.100.42"

networks:
  stackoflw:
    ipam:
      driver: default
      config:
        - subnet: 10.0.100.0/24
